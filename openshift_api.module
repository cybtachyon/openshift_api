<?php

/**
 * @file
 * Module file for the Drupal OpenShift API module.
 */

/**
 * Implements hook_menu().
 */
function openshift_api_menu() {
  $items['admin/config/services/openshift_api'] = array(
    'title' => 'OpenShift API',
    'description' => 'Configure settings for OpenShift API.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('openshift_api_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Form builder; The OpenShift API Config form.
 *
 * @return array
 *   The system settings form structure.
 *
 * @ingroup forms
 *
 * @see system_settings_form()
 */
function openshift_api_settings() {
  $form['openshift_api'] = array(
    '#type' => 'fieldset',
    '#title' => t('OpenShift API Settings'),
  );
  $form['openshift_api']['openshift_api_origin'] = array(
    '#type' => 'select',
    '#title' => t('OpenShift API Origin'),
    '#default_value' => variable_get('openshift_api_origin', 'https://openshift.redhat.com:8443'),
    '#options' => drupal_map_assoc(array('https://openshift.redhat.com:8443')),
    '#description' => t('The OpenShift API Origin Point.'),
  );
  $form['openshift_api']['openshift_api_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Secret'),
    '#default_value' => variable_get('openshift_api_secret', ''),
    '#description' => t('The OpenShift API Secret in JSON Web Token form.'),
  );

  $form['#validate'][] = 'openshift_api_settings_validate';

  return system_settings_form($form);
}

/**
 * Validates the submitted settings form.
 *
 * @param array $form
 *   The Drupal Form Array.
 * @param array $form_state
 *   The Drupal Form State Array.
 */
function openshift_api_settings_validate(array $form, array &$form_state) {
  // Validate that the secret is a JSON Web Token.
  $secret = $form_state['values']['openshift_api_secret'];
  foreach (OpenShiftApi::validateJwt($secret) as $error) {
    form_set_error('openshift_api_secret', $error);
  }

}

/**
 * Implements hook_flush_caches().
 */
function openshift_api_flush_caches() {
  return array('cache_openshift_api');
}

/**
 * Logs a debug message.
 *
 * @param string $request
 *   The message to debug.
 */
function openshift_api_debug($request) {
  $caller = _drupal_get_last_caller(debug_backtrace());
  watchdog('openshift_api', '<pre>@method</pre> <pre>@message</pre>', array(
    '@method' => $caller['function'],
    '@message' => print_r($request, TRUE),
  ), WATCHDOG_DEBUG);
}
